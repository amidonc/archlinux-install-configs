# make defualt shell for new users to zsh
/etc/default/useradd
     SHELL=/bin/zsh
     
#change current users shell to zsh
chsh <username> -s /bin/zsh

# remove systemd-bootloader timeout 
/boot/loader/loader.conf
     timeout=0

# enable audit framework, should be enabled on zen and hardened
# of not enabled, add audit=1 as a kernel parameter
# enable auditd service
               systemctrl enable auditd.service
           
# enable apparmor
    edit /boot/loader/entries/<entry>.conf
    add to the end of option
          lsm=landlock,lockdown,yama,apparmor,bpf
    enable apparmor service
          systemctrl enable apparmor.service
               
# configure shim with systemd-boot, enable secure boot
     check secureboot status,  should be disabled.
          bootctl status -or- dmesg | grep -i secure
     install required packages
          shim-signed from yay
          mokutil
          sbsigntools
     rename your current boot loader to grubx64.efi
          mv esp/EFI/BOOT/BOOTx64.EFI esp/EFI/BOOT/grubx64.efi    
     copy shim and mokmanager to your boot loader directory on ESP; use previous filename of your boot loader as as the filename for shimx64.efi
          cp /usr/share/shim-signed/shimx64.efi esp/EFI/BOOT/BOOTx64.EFI
          cp /usr/share/shim-signed/mmx64.efi esp/EFI/BOOT/
     create a new NVRAM entry to boot BOOTx64.EFI
          efibootmgr --verbose --disk /dev/sdX --part Y --create --label "Shim" --loader /EFI/BOOT/BOOTx64.EFI
     sign your boot loader (named grubx64.efi) and kernel:
          sbsign --key MOK.key --cert MOK.crt --output /boot/vmlinuz-linux /boot/vmlinuz-linux
          sbsign --key MOK.key --cert MOK.crt --output esp/EFI/BOOT/grubx64.efi esp/EFI/BOOT/grubx64.efi
     automate the kernel signing with a pacman hook
          
          /etc/pacman.d/hooks/999-sign_kernel_for_secureboot.hook
               [Trigger]
               Operation = Install
               Operation = Upgrade
               Type = Package
               Target = linux
               Target = linux-lts
               Target = linux-hardened
               Target = linux-zen

               [Action]
               Description = Signing kernel with Machine Owner Key for Secure Boot
               When = PostTransaction
               Exec = /usr/bin/find /boot/ -maxdepth 1 -name 'vmlinuz-*' -exec /usr/bin/sh -c 'if ! /usr/bin/sbverify --list {} 2>/dev/null | /usr/bin/grep -q "signature certificates"; then /usr/bin/sbsign --key MOK.key --cert MOK.crt --output {} {}; fi' ;
               Depends = sbsigntools
               Depends = findutils
               Depends = grep
     
     copy MOK.cer to your can use EFI system partition
     reboot and enable secure boot
     if shim does not find the certificate grubx64.efi is signed with in moklist, it will launch mokmanager (mmx64.efi)
     in mokmanager select enroll key from disk, find MOK.cer and add it to moklist (pretty sure this didn't work but choosing grubx64.efi did)
     when done select continue boot and your boot loader will launch
     it will be capable launching any binary signed with your Machine Owner Key.     
          
      
     
     
